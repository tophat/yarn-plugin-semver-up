name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:

env:
  CI: 1
  ARTIFACT_DIR: ./artifacts

jobs:
  linting:
    name: Lint
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - uses: ./.github/actions/detect-env
        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 18
        - name: Create artifacts directory
          run: mkdir -p ${{ env.ARTIFACT_DIR }}
        - name: Restore yarn cache
          id: yarn-cache
          uses: actions/cache@v2
          with:
            path: |
              ./.yarn
              ./.pnp.*
            key: ${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
        - name: Install dependencies
          run: yarn install --immutable
        - name: Linting
          run: yarn lint:ci
        - name: Typecheck
          run: yarn types
  tests:
    name: Tests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        node-version: [18]
    steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - uses: ./.github/actions/detect-env
        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
        - name: Create artifacts directory
          run: mkdir -p ${{ env.ARTIFACT_DIR }}
        - name: Restore yarn cache
          id: yarn-cache
          uses: actions/cache@v2
          with:
            path: |
              ./.yarn
              ./.pnp.*
            key: ${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
        - name: Install dependencies
          run: yarn install --immutable
        - name: Set GitHub user for tests
          run: |
            git config --global user.email "opensource@tophat.com"
            git config --global user.name "Top Hat Open Source"
        - name: Tests
          run: yarn test:ci
        - name: Upload Coverage Report
          run: ./.github/codecov.sh $GITHUB_EVENT_PATH
          env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        - name: Upload Artifacts
          uses: actions/upload-artifact@v2
          with:
            name: report-artifacts
            path: ${{ env.ARTIFACT_DIR }}
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [linting,tests]
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
        - uses: actions/checkout@v3
        - uses: ./.github/actions/detect-env
        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
            node-version: ${{ env.NODE_VERSION }}
        - name: Create artifacts directory
          run: mkdir -p ${{ env.ARTIFACT_DIR }}
        - name: Restore yarn cache
          id: yarn-cache
          uses: actions/cache@v2
          with:
            path: |
              ./.yarn
              ./.pnp.*
            key: ${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
        - name: Install dependencies
          run: yarn install --immutable
        - name: Build
          run: yarn build
        - name: Upload Artifacts
          uses: actions/upload-artifact@v2
          with:
            name: build-artifacts
            path: ${{ env.ARTIFACT_DIR }}
